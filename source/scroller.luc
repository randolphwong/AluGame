/**************************************************************************************************

   Given a 8 by WIDTH screen, the scroller outputs a 8x8 matrix that scrolls. An example of a 
   screen is: 
       
    victory_screen[0] = 64b0000000000000000000000000000000000000000000000000000000000000000;
    victory_screen[1] = 64b0000000000000010000100011100100000000010010000100001100001000100;
    victory_screen[2] = 64b0000000000000010001100001000010000000100010000100010010000101000;
    victory_screen[3] = 64b0000000000000010010100001000010000000100010000100100001000010000;
    victory_screen[4] = 64b0000000000000010100100001000001001001000010000100100001000010000;
    victory_screen[5] = 64b0000000000000011000100001000001010101000001001000010010000010000;
    victory_screen[6] = 64b0000000000000010000100011100000100010000000110000001100000010000;
    victory_screen[7] = 64b0000000000000000000000000000000000000000000000000000000000000000;
   
   The module uses a counter to pick an 8 by 8 bits from the screen array using the subset
   module.
   
**************************************************************************************************/
   
module scroller 
#(WIDTH = 64 : WIDTH > 0)(
    input clk,  // clock
    input rst,  // reset
    input screen[8][WIDTH],
    output out[8][8]
  ) {
  
  subset subset1;
  subset subset2;
  subset subset3;
  subset subset4;
  subset subset5;
  subset subset6;
  subset subset7;
  subset subset8;
  
  slow_clk s_clk(#DIV(23), .clk(clk), .rst(rst));
  dff counter[$clog2(WIDTH)](.clk(clk), .rst(rst));

  always {

    subset1.index = 0;
    subset1.set = 0;
    
    subset2.index = 0;
    subset2.set = 0;
    
    subset3.index = 0;
    subset3.set = 0;
    
    subset4.index = 0;
    subset4.set = 0;
    
    subset5.index = 0;
    subset5.set = 0;
    
    subset6.index = 0;
    subset6.set = 0;
    
    subset7.index = 0;
    subset7.set = 0;
    
    subset8.index = 0;
    subset8.set = 0;
    
    subset1.set = screen[0];
    subset1.index = counter.q;
    
    subset2.set = screen[1];
    subset2.index = counter.q;
    
    subset3.set = screen[2];
    subset3.index = counter.q;
    
    subset4.set = screen[3];
    subset4.index = counter.q;

    subset5.set = screen[4];
    subset5.index = counter.q;
    
    subset6.set = screen[5];
    subset6.index = counter.q;
    
    subset7.set = screen[6];
    subset7.index = counter.q;
    
    subset8.set = screen[7];
    subset8.index = counter.q;
    
    if (s_clk.out)
          counter.d = counter.q + 1;
    
    out = {subset1.out,
           subset2.out,
 	         subset3.out,
	         subset4.out,
          subset5.out,
      	   subset6.out,
	         subset7.out,
	         subset8.out};

  }
}
